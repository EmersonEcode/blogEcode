# Nome do workflow
name: Angular CI/CD to Vercel

# Gatilho: roda em pushes para a branch "main"
on:
  push:
    branches: [ "main" ]

# Tarefas (Jobs)
jobs:
  # Job 1: Build e Teste (exatamente como antes)
  build_and_test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm install
      - name: Run unit tests
        run: ng test --watch=false --browsers=ChromeHeadless
      - name: Build project
        run: ng build

  # Job 2: Deploy para a Vercel
  deploy_to_vercel:
    # Esta linha é crucial: este job SÓ roda se o job 'build_and_test' for bem-sucedido
    needs: build_and_test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Passo extra: instala a ferramenta de linha de comando da Vercel
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      # Passo final: Faz o deploy para produção, usando os segredos que configuramos no GitHub
      - name: Deploy Project to Vercel
        # O comando 'vercel --prod' faz o deploy para o link de produção
        # O token é passado de forma segura
        run: vercel deploy --prod --token=${{ secrets.VERCEL_TOKEN }}
        # As variáveis de ambiente garantem que o deploy seja para o projeto certo
        env:
          VERCEL_ORG_ID: ${{ secrets.TOKEN_VERCEL_USER }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}