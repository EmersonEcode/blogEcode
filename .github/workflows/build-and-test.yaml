# Nome do workflow que aparecerá na aba "Actions" do GitHub
name: Angular Build and Test CI

# Gatilho (Trigger): Define QUANDO este workflow deve rodar.
on:
  # Roda sempre que houver um push na branch "main"
  push:
    branches: [ "master" ]
  # Roda também em Pull Requests que mirem a branch "main"
  pull_request:
    branches: [ "master" ]

# Tarefas (Jobs): Define o que o workflow vai FAZER.
jobs:
  # Nomeamos nossa primeira (e única) tarefa como "build_and_test"
  build_and_test:
    # Máquina virtual que será usada. A mais recente do Ubuntu é uma ótima escolha.
    runs-on: ubuntu-latest

    # Passos (Steps): A sequência de comandos que a tarefa vai executar.
    steps:
      # Passo 1: Pega o código do seu repositório para dentro da máquina virtual.
      - name: Checkout code
        uses: actions/checkout@v4

      # Passo 2: Configura a versão do Node.js que queremos usar.
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20' # Usar uma versão LTS (Long Term Support) recente
          cache: 'npm'       # Configura o cache do npm para acelerar a instalação em futuras execuções

      # Passo 3: Instala as dependências do projeto.
      - name: Install dependencies
        run: npm install

      # Passo 4: Roda os testes unitários que criamos.
      # --watch=false faz o teste rodar uma vez e sair (essencial para automação).
      # --browsers=ChromeHeadless roda o teste em um navegador sem interface gráfica.
      - name: Run unit tests
        run: ng test --watch=false --browsers=ChromeHeadless

      # Passo 5: Constrói o projeto para produção para garantir que não há erros de compilação.
      - name: Build project
        run: ng build